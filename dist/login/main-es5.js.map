{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","routes","path","component","AppModule","forRoot","declarations","imports","providers","bootstrap","AuthService","http","userLogin","body","emailOrPhone","deviceId","devType","loginType","password","latitude","longitude","headers","set","post","pipe","response","console","log","data","token","saveToken","localStorage","setItem","HomeComponent","LoginComponent","auth","router","credentials","Password","login","subscribe","toke","navigateByUrl","err","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'login';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-dark rounded\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse justify-content-md-center\" id=\"navbar1\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/\">Home page</a>\n      </li>\n      <h1>If you want to go home page, so you need to login</h1>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n\n<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router'\n\n\n\nimport { AppComponent } from './app.component'\nimport { LoginComponent } from './login/login.component'\nimport { HomeComponent } from './home/home.component'\nimport { AuthService } from './auth.service'\n// import { AuthGuardService } from './auth-guard.service'\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'home',\n    component: HomeComponent,\n    // canActivate: [AuthGuardService]\n  }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [AuthService,\n    // AuthGuardService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable,} from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\nexport interface Logindata {\n    emailOrPhone: string\n    Password: string\n}\n\n@Injectable()\n\nexport class AuthService {\n    \n   \n    constructor(private http: HttpClient) {}\n\n    public login(userLogin: Logindata): Observable<any> {\n        let body = {\n            emailOrPhone: \"sutapa@mobifyi.com\",\n            deviceId: \"12345\",\n            devType: 3,\n            loginType: 1,\n            password: \"3Embed007\",\n            latitude: \"13.0002607\",\n            longitude: \"77.45730089999999\"\n        }\n\n        let headers = new HttpHeaders()\n            .set(\"Content-Type\", \"application/json\")\n            .set(\"lan\", \"en\");\n        return this.http.post('https://dev-api.service-genie.xyz/customer/signIn', body, { headers: headers }).pipe(map(\n            (response:any) => {\n                console.log(response.data.token)\n                return this.saveToken(response.data.token);  \n            \n        }));\n\n\n    }\n\n    private saveToken(token: string): string {\n        localStorage.setItem('app_auth',token)\n        return token\n}\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>WELCOME</title>\n</head>\n\n<body>\n    <div class=\"heade\">\n        <h1> ABOUT ME..\n        </h1>\n       <h4>\n            Hello All, I am Anjali. I am self learner and curntaly I am working on angular.\n       </h4>\n   </div>\n</body>\n\n</html>\n\n\n","import { Component } from '@angular/core';\nimport { AuthService, Logindata } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent  {\n  credentials: Logindata = {\n    emailOrPhone: '',\n    Password: ''\n  }\n\n  constructor(private auth:AuthService, private router:Router) { }\n\n  login(){\n    console.log(this.credentials)\n    this.auth.login(this.credentials).subscribe(\n      (toke)=>{\n        this.router.navigateByUrl('/home');\n      },\n      err =>{\n        console.log(err)\n\n\n      }\n    )\n  }\n\n}\n","<section id=\"login\">\n  <div class=\"bwm-form\">\n    <div class=\"row\">\n      <div class=\"col-md-5\">\n        <h1 class=\"page-title\">Login</h1>\n        <form>\n          <div class=\"form-group\">\n            <label for=\"emailOrPhone\"><b>emailOrPhone</b></label>\n            <input  [(ngModel)]=\"credentials.emailOrPhone\"  type=\"text\" \n              placeholder=\"Enter emailOrPhone\" \n              name=\"emailOrPhone\" \n              required>\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"Password\"><b>Password</b></label>\n              <input [(ngModel)]=\"credentials.Password\" \n              type=\"Password\" \n              placeholder=\"Enter Password\" \n              name=\"Password\" \n              required>\n          </div>\n          <button class=\"btn btn-lg btn-primary btn-block\" type=\"button\" (click)=\"login()\">Sign in</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- <div class=\"container\">\n  <div class=\"row\">\n      <div class=\"cal-md-6 mt-5 mx-auto\">\n          <form (ngSubmit)=\"login()\">\n              <h1 class=\"h3 md-3 font-weight-normal\">Please sign in</h1>\n              <div class=\"form-group\">\n                  <label for=\"emailOrPhone\">emailOrPhone</label>\n                  <input type=\"emailOrPhone\" class=\"form-control\" name=\"emailOrPhone\" placeholder=\"Enter emailOrPhone\" \n                  (ngmodel)=\"credentials.emailOrPhone\" >\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"Password\">Password</label>\n                  <input type=\"Password\" class=\"form-control\" name=\"Password\" placeholder=\"Enter Password\"\n                  (ngmodel)=\"credentials.Password\">\n              </div>\n              <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n          </form>\n      </div>\n  </div>\n</div> -->\n\n\n<!--  [(ngmodel)]=\"credentials.emailOrPhone\" -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}